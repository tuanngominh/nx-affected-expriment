on:
  push:
    tags:
      - '*'

jobs:
  build_test_deploy:
    name: Build & Test & Deploy
    runs-on: ubuntu-latest
    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - uses: actions/cache@v1
        id: npm-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - uses: actions/setup-node@v1
        with:
          node-version: '10.16.0'

      - name: Install dependencies
        run: npm ci
        if: steps.npm-cache.outputs.cache-hit != 'true'

#      - name: Install firebase tools
#        run: npm install -g firebase-tools

      - name: 'Get previous tag'
        id: previoustag
        run: echo ::set-output name=value::$(git for-each-ref --format="%(refname:strip=2)" --sort=taggerdate --count=1 refs/tags)

#      - name: 'Get previous tag 2'
#        shell: bash
#        id: previoustag2
#        run: echo "::set-output name=value::$(git for-each-ref --format=\"%(refname:strip=2)\" --sort=-taggerdate --count=2 refs/tags | sed -n 2p)"

      - name: 'Get current tag'
        id: currenttag
        run: echo ::set-output name=value::${GITHUB_REF##*/}

      - name: Prepare git branches for nx affected command
        run: |
          echo "Previous tag: ${PREVIOUS_TAG}, Previous tag 2: ${PREVIOUS_TAG2}, current tag: ${CURRENT_TAG}"
          git fetch origin ${PREVIOUS_TAG}
          git fetch origin ${CURRENT_TAG}
          git checkout ${PREVIOUS_TAG}
          git checkout ${CURRENT_TAG}
        env:
          PREVIOUS_TAG: ${{steps.previoustag.outputs.value}}
#          PREVIOUS_TAG2: ${{steps.previoustag2.outputs.value}}
          CURRENT_TAG: ${{steps.currenttag.outputs.value}}

      #      - name: Format Check
      #        run: npx nx format:check --base=${BASE_BRANCH}
      #        env:
      #          BASE_BRANCH: ${{github.base_ref}}
      #
      #      - name: Lint
      #        run: npx nx affected:lint --base=${BASE_BRANCH}
      #        env:
      #          BASE_BRANCH: ${{github.base_ref}}

#      - name: Test
#        run: npx nx affected --target=test --base=${BASE_BRANCH}
#        env:
#          BASE_BRANCH: ${{github.base_ref}}
#
#      - name: Build
#        run: npx nx affected --target=build --base=${BASE_BRANCH}
#        env:
#          BASE_BRANCH: ${{github.base_ref}}

      - name: Deploy
        run: echo "$REF"
#        run: npx nx affected --target=deploy --base=${BASE_BRANCH}
        env:
          REF: ${{github.ref}}

